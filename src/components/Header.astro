---
import { LOGO_IMAGE, SITE } from "@config";
import LinkButton from "./LinkButton.astro";
import Modal from "./Modal.astro";
import SearchBar from "./Search";
import { getCollection } from "astro:content";

export interface Props {
  activeNav?: "posts" | "tags" | "about" | "search";
}

const { activeNav } = Astro.props;
// Retrieve all articles
const posts = await getCollection("blog", ({ data }) => !data.draft);

// List of items to search in
const searchList = posts.map(({ data }) => ({
  title: data.title,
  description: data.description,
  data,
}));
---

<header id="main-header" class="fixed z-30 w-full bg-skin-fill transition-transform duration-700 ease-in-out">
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="top-nav-wrap">
      <a href="/" class="logo whitespace-nowrap">
        {
          LOGO_IMAGE.enable ? (
            <img
              src={`/assets/${LOGO_IMAGE.svg ? "logo.svg" : "logo.png"}`}
              alt={SITE.title}
              width={LOGO_IMAGE.width}
              height={LOGO_IMAGE.height}
            />
          ) : (
            SITE.title
          )
        }
      </a>
      <!-- <LinkButton
        href="/search"
        className={`focus-outline p-3 sm:p-1 ${
          activeNav === "search" ? "active" : ""
        } flex`}
        ariaLabel="search"
        title="Search"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="scale-125 sm:scale-100 sm:mr-1"
          ><path
            d="M19.023 16.977a35.13 35.13 0 0 1-1.367-1.384c-.372-.378-.596-.653-.596-.653l-2.8-1.337A6.962 6.962 0 0 0 16 9c0-3.859-3.14-7-7-7S2 5.141 2 9s3.14 7 7 7c1.763 0 3.37-.66 4.603-1.739l1.337 2.8s.275.224.653.596c.387.363.896.854 1.384 1.367l1.358 1.392.604.646 2.121-2.121-.646-.604c-.379-.372-.885-.866-1.391-1.36zM9 14c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"
          ></path>
        </svg>
        <span class="hidden sm:block">What are you looking for?</span>
      </LinkButton> -->

      <Modal 
        title="SEARCH any articles" 
        modalId="modalSearch" 
        modalBtn="What are you looking for?" 
        className="font-black [&>span]:border-none [&>span>span]:hidden [&>span>svg]:block sm:[&>span>span]:block"
      >
        <main slot="main" class="relative w-[90vw] h-[80vh] before:content-[''] before:fixed before:top-[57px] before:left-0 before:w-full before:bg-skin-fill before:h-8 before:z-20">
          <div class="w-full h-full">
            <SearchBar client:load searchList={searchList} />
          </div>
        </main>
      </Modal>
      
      <div class="flex gap-4">
        <button
          class="group hamburger-menu focus-outline flex gap-2 items-center"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <div class="icon">
            <span></span>
            <span></span>
          </div>
          <span class="hidden sm:block text-2xl font-black -tracking-wider group-[.is-active]:opacity-0 transition-opacity duration-700 delay-[1.2s] group-[.is-active]:delay-300 group-[.is-active]:duration-300">Menu</span>
        </button>
        {
          SITE.lightAndDarkMode && (
            <button
              id="theme-btn"
              class="focus-outline"
              title="Toggles light & dark"
              aria-label="auto"
              aria-live="polite"
            >
              <svg xmlns="http://www.w3.org/2000/svg" id="moon-svg">
                <path d="M20.742 13.045a8.088 8.088 0 0 1-2.077.271c-2.135 0-4.14-.83-5.646-2.336a8.025 8.025 0 0 1-2.064-7.723A1 1 0 0 0 9.73 2.034a10.014 10.014 0 0 0-4.489 2.582c-3.898 3.898-3.898 10.243 0 14.143a9.937 9.937 0 0 0 7.072 2.93 9.93 9.93 0 0 0 7.07-2.929 10.007 10.007 0 0 0 2.583-4.491 1.001 1.001 0 0 0-1.224-1.224zm-2.772 4.301a7.947 7.947 0 0 1-5.656 2.343 7.953 7.953 0 0 1-5.658-2.344c-3.118-3.119-3.118-8.195 0-11.314a7.923 7.923 0 0 1 2.06-1.483 10.027 10.027 0 0 0 2.89 7.848 9.972 9.972 0 0 0 7.848 2.891 8.036 8.036 0 0 1-1.484 2.059z" />
              </svg>
              <svg xmlns="http://www.w3.org/2000/svg" id="sun-svg">
                <path d="M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19h2v3h-2zm0-17h2v3h-2zm-9 9h3v2h-3zm17 0h3v2h-3zM4.219 18.363l2.12-2.122 1.415 1.414-2.12 2.122zM16.24 6.344l2.122-2.122 1.414 1.414-2.122 2.122zM6.342 7.759 4.22 5.637l1.415-1.414 2.12 2.122zm13.434 10.605-1.414 1.414-2.122-2.122 1.414-1.414z" />
              </svg>
            </button>
          )
        }
      </div>
      
    </div>
  </div>
  <hr class="border-skin-line" />
</header>

<div id="menu-items" class="nav-main opacity-0 flex flex-col justify-center">
  <nav id="nav-menu" class="text-center">
    <ul>
      <li>
        <a href="/posts" class={activeNav === "posts" ? "active relative inline-block text-3xl sm:text-5xl md:text-7xl py-5 duration-500" : "relative inline-block text-3xl sm:text-5xl md:text-7xl py-5 duration-500"}>
          Posts
        </a>
      </li>
      <li>
        <a href="/tags" class={activeNav === "tags" ? "active relative inline-block text-3xl sm:text-5xl md:text-7xl py-5 duration-500" : "relative inline-block text-3xl sm:text-5xl md:text-7xl py-5 duration-500"}>
          Tags
        </a>
      </li>
      <li>
        <a href="/about" class={activeNav === "about" ? "active relative inline-block text-3xl sm:text-5xl md:text-7xl py-5 duration-500" : "relative inline-block text-3xl sm:text-5xl md:text-7xl py-5 duration-500"}>
          About
        </a>
      </li>
    </ul>
  </nav>
</div>


<style>
  #skip-to-content {
    @apply absolute -top-full left-16 z-50 bg-skin-accent px-3 py-2 text-skin-inverted transition-all focus:top-4;
  }
  .nav-container {
    @apply mx-auto flex max-w-full flex-col items-center justify-between sm:flex-row;
  }
  .top-nav-wrap {
    @apply relative flex w-full justify-between px-4 sm:px-6 py-2 items-center ;
  }
  .logo {
    @apply static py-1 text-3xl font-black -tracking-wider text-skin-accent sm:text-4xl mt-0.5;
  }
  html {
    &.nav-open {
      @apply overflow-y-hidden;
    }
  }
  .hamburger-menu {
    @apply self-end p-2 transition-transform duration-700 delay-1000;
    .nav-open & {
      @apply sm:translate-x-20 transition-transform duration-500 delay-300;
    }
    .icon {
      @apply relative w-7 h-7 transition-transform duration-700;
      .nav-open & {
        @apply rotate-45 transition-transform duration-700;
      }
      >span {
        @apply block bg-skin-accent absolute h-1.5 w-full opacity-100 left-0 rotate-0 transition-transform duration-300;
        &:first-child {
          @apply top-[5px] origin-left;
          .nav-open & {
            @apply rotate-90 translate-x-3.5 -translate-y-2;
          }
        }
        &:nth-child(2) {
          @apply top-[17px];
          .nav-open & {
            @apply rotate-180 -translate-y-[6px];
          }
        }
      }
    }
  }
  .hamburger-menu:hover {
    .icon > span:first-child {
      @apply rotate-90 translate-x-3.5 -translate-y-2;
    }
    .icon > span:nth-child(2) {
      @apply rotate-180 -translate-y-[6px];
    }
  }
  .hamburger-menu svg {
    @apply h-6 w-6 scale-125 fill-skin-base transition-all;
  }
  .nav-main {
    @apply fixed top-[66px] right-0 bottom-0 left-0 z-30 bg-skin-fill/75 backdrop-blur-md transition-opacity duration-[1700ms] delay-700 ease-in-out opacity-0 pointer-events-none; 
    .nav-open & {
      @apply opacity-100 pointer-events-auto duration-500;
      >nav>ul {
        >li { overflow: hidden; }
        >li>a {
          animation: nav-item-slide-in .7s ease-out forwards;
          @apply opacity-0 -translate-x-96;
          &:before {
            @apply translate-x-60;
          }
        }
        >li:first-child a {
          animation-delay: .3s;
        }
        >li:nth-child(2) a {
          animation-delay: .4s;
        }
        >li:nth-child(3) a {
          animation-delay: .5s;
        }
      }
    }
    >nav>ul {
      @apply -mt-10;
      >li>a {
        @apply relative block font-black -tracking-widest hover:text-skin-accent w-1/4 mx-auto;
        animation: nav-item-slide-out .3s ease-in forwards;
        &:before {
          @apply absolute content-[''] hidden sm:inline-block w-4 h-4 rounded-full bg-skin-accent bottom-8 right-40 lg:right-60 transition-transform duration-500 ease-in-out;
        }
      }
      >li:first-child a {
        animation-delay: .5s;
        &:before {
            transition-delay: .5s;
          }
      }
      >li:nth-child(2) a {
        animation-delay: .4s;
        &:before {
            transition-delay: .4s;
          }
      }
      >li:nth-child(3) a {
        animation-delay: .3s;
        &:before {
            transition-delay: .3s;
          }
      }
    }
  }
  nav a.active {
    @apply text-skin-accent;
  }
  nav a.active svg {
    @apply fill-skin-accent;
  }

  nav button {
    @apply p-1;
  }
  nav button svg {
    @apply h-6 w-6 fill-skin-base hover:fill-skin-accent;
  }
  #theme-btn {
    @apply p-3 sm:p-1;
  }
  #theme-btn svg {
    @apply scale-125 hover:rotate-12 sm:scale-100;
  }

  .menu-icon line {
    @apply transition-opacity duration-150 ease-in-out;
  }
  .menu-icon .close {
    opacity: 0;
  }
  .menu-icon.is-active .line {
    @apply opacity-0;
  }
  .menu-icon.is-active .close {
    @apply opacity-100;
  }
  #main-header {
    @apply
        backdrop-blur-md
        bg-skin-fill/75
        top-0;
    &.hide {
      @apply
        translate-y-[-67px];
    }
    >div {
      @apply 
        h-[66px];
    }
    /* &.small {
      
    } */
    .nav-open & {
      @apply
        top-0
        translate-y-0;
    }
  }

  @keyframes nav-item-slide-in {
      0% {
          opacity: 0;
          transform: translateX(-500px);
          @media screen and (max-width: 768px) {
              transform:translateX(0)
          }
      }

      to {
          opacity: 1;
          transform: translateX(0)
      }
  }

  @keyframes nav-item-slide-out {
      0% {
          opacity: 1;
          transform: translateX(0)
      }

      to {
          opacity: 0;
          @media screen and (min-width: 768px) {
              transform:translateX(-500px)
          }
      }
  }
</style>

<script>
  function toggleNav() {
    // Toggle menu
    const menuBtn = document.querySelector(".hamburger-menu");
    const menuIcon = document.querySelector(".menu-icon");
    const html = document.querySelector("html");

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuBtn?.classList.toggle("is-active");
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
      html?.classList.toggle("nav-open");
    });
  }

  toggleNav();

  function toggleHeader() {
    var prevScrollpos = window.scrollY;

    /* Get the header element and it's position */
    var headerDiv = document.querySelector("#main-header");
    // @ts-ignore
    var headerBottom = headerDiv.offsetTop + headerDiv.offsetHeight*8;

    window.onscroll = function() {
      var currentScrollPos = window.scrollY;

      /* if we're scrolling up, or we haven't passed the header,
        show the header at the top */
      if (prevScrollpos > currentScrollPos  || currentScrollPos < headerBottom) {  
        // @ts-ignore
          headerDiv.classList.remove("hide");
      }
      else {
          /* otherwise we're scrolling down & have passed the header so hide it */// @ts-ignore
          headerDiv.classList.add("hide");
      } 

      prevScrollpos = currentScrollPos;

      if(150 > currentScrollPos) {
        // @ts-ignore
        headerDiv.classList.remove("small");
      }
      else {
        // @ts-ignore
        headerDiv.classList.add("small");
      }
    }
  }

  toggleHeader();
  
  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", toggleNav);
  document.addEventListener("astro:after-swap", toggleHeader);
  
</script>
