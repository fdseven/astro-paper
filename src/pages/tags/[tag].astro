---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import slugify from "@utils/slugify";
import { SITE } from "@config";
import getSortedPosts from "@utils/getSortedPosts";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  const tags = getUniqueTags(posts);

  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const posts = await getCollection("blog", ({ data }) => !data.draft);

const tagPosts = getPostsByTag(posts, tag);

const sortTagsPost = getSortedPosts(tagPosts);
---

<Layout title={`Tag:${tag} | ${SITE.title}`}>
  <Header activeNav="tags" />
  <Main
    pageTitle={[`#`, `${tag}`]}
    className="whitespace-nowrap !text-4xl !font-black md:!text-7xl lg:!text-[160px] sm:right-0 -tracking-widest md:-mt-6 md:-mr-10 lg:-mb-10 opacity-25 sm:opacity-10 lg:text-right"
    titleTransition={tag}
    pageDesc={`Articles with the tag "${tag}".`}
  >
    <h1 slot="title" transition:name={tag}>{`Tag:${tag}`}</h1>
    <ul class="grid gap-y-0 md:grid-cols-2 sm:gap-x-8 lg:gap-x-12">
      {
        sortTagsPost.map(({ data }) => (
          <Card href={`/posts/${slugify(data)}`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>
  <Footer />
</Layout>
